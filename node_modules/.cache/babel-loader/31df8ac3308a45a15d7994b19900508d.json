{"ast":null,"code":"var _jsxFileName = \"E:\\\\rfront\\\\testfront\\\\src\\\\Redux\\\\Action\\\\registration.action.js\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { POST_REGISTRATION_FAILURE, POST_REGISTRATION_REQUEST, POST_REGISTRATION_SUCCESS } from \"../Constant/constant\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst notify = msg => toast(msg);\n\nlet history = useHistory();\n\n/*#__PURE__*/\n_jsxDEV(ToastContainer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 1\n}, this);\n\nexport const postUsersRequest = () => {\n  return {\n    type: POST_REGISTRATION_REQUEST\n  };\n};\nexport const postUsersSuccess = msg => {\n  return {\n    type: POST_REGISTRATION_SUCCESS,\n    payload: msg\n  };\n};\nexport const postUsersFalure = errorMsg => {\n  return {\n    type: POST_REGISTRATION_FAILURE,\n    payload: errorMsg\n  };\n};\nexport const postRegistration = Data => {\n  return dispatch => {\n    dispatch(postUsersRequest());\n    axios.post('http://localhost/8Laravel/public/api/registration', Data).then(response => {\n      const msg = response.data;\n      notify(msg.data);\n      console.log(msg.data, 'success_Action');\n\n      if (msg.success === \"true\") {\n        console.log('ssssssssssssssssssssssssss');\n        history.push(\"/Login\");\n      }\n\n      dispatch(postUsersSuccess(msg));\n    }).catch(error => {\n      const errorMsg = error.message;\n      notify(errorMsg.message);\n      console.log(error, 'assssssss');\n      dispatch(postUsersFalure(errorMsg));\n    });\n  };\n};","map":{"version":3,"sources":["E:/rfront/testfront/src/Redux/Action/registration.action.js"],"names":["axios","ToastContainer","toast","POST_REGISTRATION_FAILURE","POST_REGISTRATION_REQUEST","POST_REGISTRATION_SUCCESS","Link","useHistory","notify","msg","history","postUsersRequest","type","postUsersSuccess","payload","postUsersFalure","errorMsg","postRegistration","Data","dispatch","post","then","response","data","console","log","success","push","catch","error","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,yBAAT,EAAoCC,yBAApC,EAA+DC,yBAA/D,QAAgG,sBAAhG;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;;AAEA,MAAMC,MAAM,GAAIC,GAAD,IAASP,KAAK,CAACO,GAAD,CAA7B;;AACA,IAAIC,OAAO,GAAGH,UAAU,EAAxB;;AACA;AAAA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;;AACA,OAAO,MAAMI,gBAAgB,GAAG,MAAI;AAChC,SAAO;AACHC,IAAAA,IAAI,EAACR;AADF,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMS,gBAAgB,GAAIJ,GAAD,IAAO;AACnC,SAAO;AACHG,IAAAA,IAAI,EAACP,yBADF;AAEHS,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMM,eAAe,GAAIC,QAAD,IAAY;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAACT,yBADF;AAEHW,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAGC,IAAD,IAAQ;AAEnC,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AACAX,IAAAA,KAAK,CAACoB,IAAN,CAAW,mDAAX,EAA+DF,IAA/D,EACCG,IADD,CACMC,QAAQ,IAAI;AACd,YAAMb,GAAG,GAAGa,QAAQ,CAACC,IAArB;AACAf,MAAAA,MAAM,CAACC,GAAG,CAACc,IAAL,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACc,IAAhB,EAAqB,gBAArB;;AACA,UAAId,GAAG,CAACiB,OAAJ,KAAgB,MAApB,EACA;AAAIF,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAf,QAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACH;;AACDR,MAAAA,QAAQ,CAACN,gBAAgB,CAACJ,GAAD,CAAjB,CAAR;AAED,KAXH,EAYGmB,KAZH,CAYSC,KAAK,IAAG;AACb,YAAMb,QAAQ,GAAGa,KAAK,CAACC,OAAvB;AACAtB,MAAAA,MAAM,CAACQ,QAAQ,CAACc,OAAV,CAAN;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EAAkB,WAAlB;AACAV,MAAAA,QAAQ,CAACJ,eAAe,CAACC,QAAD,CAAhB,CAAR;AACD,KAjBH;AAkBH,GApBD;AAqBH,CAvBM","sourcesContent":["import axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { POST_REGISTRATION_FAILURE, POST_REGISTRATION_REQUEST, POST_REGISTRATION_SUCCESS } from \"../Constant/constant\"\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst notify = (msg) => toast(msg);\r\nlet history = useHistory();\r\n<ToastContainer/>\r\nexport const postUsersRequest = ()=>{\r\n    return {\r\n        type:POST_REGISTRATION_REQUEST\r\n    }\r\n}\r\n\r\n\r\nexport const postUsersSuccess = (msg)=>{\r\n    return {\r\n        type:POST_REGISTRATION_SUCCESS,\r\n        payload: msg\r\n    }\r\n}\r\n\r\nexport const postUsersFalure = (errorMsg)=>{\r\n    return {\r\n        type:POST_REGISTRATION_FAILURE,\r\n        payload: errorMsg\r\n    }\r\n}\r\n\r\nexport const postRegistration =(Data)=>{\r\n   \r\n    return dispatch =>{\r\n        dispatch(postUsersRequest())\r\n        axios.post('http://localhost/8Laravel/public/api/registration',Data)\r\n        .then(response => {\r\n            const msg = response.data\r\n            notify(msg.data);\r\n            console.log(msg.data,'success_Action')\r\n            if( msg.success === \"true\" )\r\n            {   console.log('ssssssssssssssssssssssssss')\r\n                history.push(\"/Login\");\r\n            }\r\n            dispatch(postUsersSuccess(msg)) \r\n           \r\n          })\r\n          .catch(error =>{\r\n            const errorMsg = error.message\r\n            notify(errorMsg.message);\r\n            console.log(error,'assssssss')\r\n            dispatch(postUsersFalure(errorMsg))\r\n          })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}