{"ast":null,"code":"var _jsxFileName = \"E:\\\\rfront\\\\testfront\\\\src\\\\Redux\\\\Action\\\\registration.action.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useHistory } from \"react-router-dom\";\nimport { POST_REGISTRATION_FAILURE, POST_REGISTRATION_REQUEST, POST_REGISTRATION_SUCCESS } from \"../Constant/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst notify = msg => toast(msg);\n\n/*#__PURE__*/\n_jsxDEV(ToastContainer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 1\n}, this);\n\nexport const postUsersRequest = () => {\n  return {\n    type: POST_REGISTRATION_REQUEST\n  };\n};\nexport const postUsersSuccess = () => {\n  return {\n    type: POST_REGISTRATION_SUCCESS\n  };\n};\nexport const postUsersFalure = () => {\n  return {\n    type: POST_REGISTRATION_FAILURE\n  };\n};\nexport const postRegistration = Data => {\n  _s();\n\n  const history = useHistory();\n  return dispatch => {\n    dispatch(postUsersRequest());\n    axios.post('http://localhost/8Laravel/public/api/registration', Data).then(response => {\n      const msg = response.data;\n      notify(msg.data);\n      console.log(msg.data, 'success');\n      dispatch(postUsersSuccess(msg));\n\n      if (msg.success == \"true\") {\n        console.log('history log');\n        history.push(\"/Login\");\n      }\n    }).catch(error => {\n      const errorMsg = error.message;\n      notify(errorMsg.message);\n      console.log(error, 'assssssss');\n      dispatch(postUsersFalure(errorMsg));\n    });\n  };\n};\n\n_s(postRegistration, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});","map":{"version":3,"sources":["E:/rfront/testfront/src/Redux/Action/registration.action.js"],"names":["axios","ToastContainer","toast","useHistory","POST_REGISTRATION_FAILURE","POST_REGISTRATION_REQUEST","POST_REGISTRATION_SUCCESS","notify","msg","postUsersRequest","type","postUsersSuccess","postUsersFalure","postRegistration","Data","history","dispatch","post","then","response","data","console","log","success","push","catch","error","errorMsg","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,yBAAT,EAAoCC,yBAApC,EAA+DC,yBAA/D,QAAgG,sBAAhG;;;AAGA,MAAMC,MAAM,GAAIC,GAAD,IAASN,KAAK,CAACM,GAAD,CAA7B;;AACA;AAAA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAI;AAChC,SAAO;AACHC,IAAAA,IAAI,EAACL;AADF,GAAP;AAGH,CAJM;AAOP,OAAO,MAAMM,gBAAgB,GAAG,MAAI;AAChC,SAAO;AACHD,IAAAA,IAAI,EAACJ;AADF,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMM,eAAe,GAAG,MAAI;AAC/B,SAAO;AACHF,IAAAA,IAAI,EAACN;AADF,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMS,gBAAgB,GAAGC,IAAD,IAAQ;AAAA;;AACnC,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;AACA,SAAOa,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACAT,IAAAA,KAAK,CAACiB,IAAN,CAAW,mDAAX,EAA+DH,IAA/D,EACCI,IADD,CACMC,QAAQ,IAAI;AACd,YAAMX,GAAG,GAAGW,QAAQ,CAACC,IAArB;AACAb,MAAAA,MAAM,CAACC,GAAG,CAACY,IAAL,CAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACY,IAAhB,EAAqB,SAArB;AACAJ,MAAAA,QAAQ,CAACL,gBAAgB,CAACH,GAAD,CAAjB,CAAR;;AAEA,UAAGA,GAAG,CAACe,OAAJ,IAAa,MAAhB,EACA;AAEIF,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAP,QAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACH;AACF,KAbH,EAcGC,KAdH,CAcSC,KAAK,IAAG;AACb,YAAMC,QAAQ,GAAGD,KAAK,CAACE,OAAvB;AACArB,MAAAA,MAAM,CAACoB,QAAQ,CAACC,OAAV,CAAN;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ,EAAkB,WAAlB;AACAV,MAAAA,QAAQ,CAACJ,eAAe,CAACe,QAAD,CAAhB,CAAR;AACD,KAnBH;AAoBH,GAtBD;AAuBH,CAzBM;;GAAMd,gB;UACOV,U","sourcesContent":["import axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { POST_REGISTRATION_FAILURE, POST_REGISTRATION_REQUEST, POST_REGISTRATION_SUCCESS } from \"../Constant/constant\"\r\n\r\n\r\nconst notify = (msg) => toast(msg);\r\n<ToastContainer/>\r\nexport const postUsersRequest = ()=>{\r\n    return {\r\n        type:POST_REGISTRATION_REQUEST\r\n    }\r\n}\r\n\r\n\r\nexport const postUsersSuccess = ()=>{\r\n    return {\r\n        type:POST_REGISTRATION_SUCCESS\r\n    }\r\n}\r\n\r\nexport const postUsersFalure = ()=>{\r\n    return {\r\n        type:POST_REGISTRATION_FAILURE\r\n    }\r\n}\r\n\r\nexport const postRegistration =(Data)=>{\r\n    const history = useHistory();\r\n    return dispatch =>{\r\n        dispatch(postUsersRequest())\r\n        axios.post('http://localhost/8Laravel/public/api/registration',Data)\r\n        .then(response => {\r\n            const msg = response.data\r\n            notify(msg.data);\r\n            console.log(msg.data,'success')\r\n            dispatch(postUsersSuccess(msg)) \r\n           \r\n            if(msg.success==\"true\")\r\n            {\r\n               \r\n                console.log('history log');\r\n                history.push(\"/Login\");\r\n            }\r\n          })\r\n          .catch(error =>{\r\n            const errorMsg = error.message\r\n            notify(errorMsg.message);\r\n            console.log(error,'assssssss')\r\n            dispatch(postUsersFalure(errorMsg))\r\n          })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}